---
import ContentWrapper from './ContentWrapper.astro';

let response = await fetch('https://dooshin.net/shiten_wp/wp-json/wp/v2/posts?per_page=3&context=embed&acf_format=standard');
if (!response.ok) {
	throw new Error(`HTTP error! status: ${response.status}`);
}
let posts = await response.json();
---

<div class="p-mv">
	<ContentWrapper>
		<div class="swiper p-mv-swiper">
			<div class="swiper-wrapper p-mv-swiper__wrapper">
				{
					posts.map(post => {
						return (
							<div class="swiper-slide p-mv-swiper__slide">
								<div class="slide p-mv-swiper__slides">
									<div class="slide-media p-mv-swiper__slide-media">
										<img src={post.thumbnail_url.url} alt="" class="p-mv__icon" />
									</div>
								</div>
							</div>
						);
					})
				}
				{
					posts.map(post => {
						return (
							<div class="swiper-slide p-mv-swiper__slide">
								<div class="slide p-mv-swiper__slides">
									<div class="slide-media p-mv-swiper__slide-media">
										<img src={post.thumbnail_url.url} alt="" class="p-mv__icon" />
									</div>
								</div>
							</div>
						);
					})
				}
			</div>

			<div class="p-mv_contents">
				{
					posts.map(post => {
						let posttitle = post.title.rendered;
						let pattern = ' ';
						let posttitleArray = [];
						if (posttitle.match(pattern)) {
							posttitleArray = posttitle.split(pattern);
						} else {
							posttitleArray = [posttitle];
						}
						return (
							<div class="p-mv__content">
								<a class="p-mv__content-link" href={`/article/${post.slug}`}>
									<p class="p-mv__content-text">
										<span class="content-text__marker">
											{posttitleArray.slice(0, 2).map(word => (
												<span class="p-mv__content-text__markerBg">{word}</span>
											))}
										</span>
									</p>
								</a>
							</div>
						);
					})
				}
				{
					posts.map(post => {
						let posttitle = post.title.rendered;
						let pattern = ' ';
						let posttitleArray = [];
						if (posttitle.match(pattern)) {
							posttitleArray = posttitle.split(pattern);
						} else {
							posttitleArray = [posttitle];
						}
						return (
							<div class="content">
								<a class="content-link" href={`/article/${post.slug}`}>
									<p class="content-text">
										<span class="content-text__marker">
											{posttitleArray.slice(0, 2).map(word => (
												<span class="content-text__markerBg">{word}</span>
											))}
										</span>
									</p>
								</a>
							</div>
						);
					})
				}
			</div>
		</div>
	</ContentWrapper>
</div>

<style is:global lang="scss"></style>

<script type="module">
	import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.mjs';

	const slideLength = document.querySelectorAll('.p-mv .swiper-slide').length;
	window.addEventListener('DOMContentLoaded', () => {
		startAnimation(0);
	});
	const startAnimation = index => {
		let activeSlide = document.querySelectorAll('.p-mv .p-mv__content')[index];
		activeSlide.classList.add('is-animated');
	};
	// アニメーション終了
	const finishAnimation = () => {
		let activeSlides = document.querySelectorAll('.p-mv .p-mv__content');
		activeSlides.forEach(activeSlides => {
			activeSlides.classList.remove('is-animated');
		});
	};

	const mySwiper = new Swiper('.p-mv .swiper', {
		loop: true,
		loopAdditionalSlides: 2,
		speed: 2000,
		effect: 'fade',
		autoplay: {
			delay: 4000,
			disableOnInteraction: false,
			waitForTransition: false,
		},
		followFinger: false,
		observeParents: true,
		on: {
			slideChange: swiper => {
				finishAnimation();
			},
			slideChangeTransitionStart: swiper => {
				startAnimation(swiper.realIndex);
			},
		},
	});
</script>
