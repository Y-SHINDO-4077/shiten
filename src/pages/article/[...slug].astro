---
export const prerender = true;
import BaseLayout from '../../layouts/BaseLayout.astro';
import ContentWrapper from '../../components/ContentWrapper.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Heading from '../../components/Heading.astro';
import Profile from '../../components/Profile.astro';
const { slug } = Astro.params;
let response = await fetch(`https://dooshin.net/shiten_wp/wp-json/wp/v2/posts?_embed&acf_format=standard&slug=${slug}`);
if (!response.ok) {
	throw new Error(`HTTP error! status: ${response.status}`);
}
const [post] = await response.json();
const renderedContent = post.content.rendered;

export async function getStaticPaths() {
	let response = await fetch(`https://dooshin.net/shiten_wp/wp-json/wp/v2/posts?_embed`);
	if (!response.ok) {
		throw new Error(`HTTP error! status: ${response.status}`);
	}
	let posts = await response.json();

	return posts.map(post => ({
		params: { slug: post.slug },
		props: { post: post },
	}));
}

const articleDate = new Date(post.date);
let posttitle = post.title.rendered;
let pattern = ' ';
let posttitleArray = [];
if (posttitle.match(pattern)) {
	posttitleArray = posttitle.split(pattern);
} else {
	posttitleArray = [posttitle];
}
---

<BaseLayout>
	<ContentWrapper small>
		<div class="l-flex">
			<ul class="js-lists p-list"></ul>
			<article class="p-article-detail">
				<Heading type="h2" heading="視点の専門家に聞く" icon="ear" className="u-margin__top144 u-margin__top--sp96 u-margin__inline " />
				<div class="u-margin__top72 u-margin__top--sp48 u-center">
					<img src={post.thumbnail_url.url} alt="" />
				</div>
				<h1 class="c-heading-h1 u-margin__inline u-margin__top32 u-margin__top--sp16">
					{
						posttitleArray.map(title => {
							return (
								<Fragment>
									{title}
									<br />
								</Fragment>
							);
						})
					}
				</h1>

				<div class="u-right u-margin__top24 u-margin__top--sp16">
					<FormattedDate date={articleDate} />
				</div>
				<Profile name={post.acf.name} role={post.acf.role} image={post.acf.eyecatch} description={post.acf.description} />
				<Fragment set:html={renderedContent} />
			</article>
		</div>
	</ContentWrapper>
</BaseLayout>

<style is:global>
	.wp-block-post-featured-image {
		margin-right: 0;
		margin-left: 0;
	}

	.wp-block-post-featured-image a {
		display: block;
	}

	.wp-block-post-featured-image img {
		width: 100%;
		max-width: 100%;
		height: auto;
		vertical-align: bottom;
	}

	.wp-block-post-featured-image.alignfull img,
	.wp-block-post-featured-image.alignwide img {
		width: 100%;
	}

	.wp-block-post-title {
		word-break: break-word;
	}

	.wp-block-post-title a {
		display: inline-block;
	}

	.wp-block-group {
		box-sizing: border-box;
	}

	:where(.wp-block-group.has-background) {
		padding: 1.25em 2.375em;
	}

	.wp-block-spacer {
		clear: both;
	}

	.wp-block-image {
		margin: 0 0 1em;
	}

	.wp-block-image img {
		max-width: 100%;
		height: auto;
		vertical-align: bottom;
	}

	.wp-block-image:not(.is-style-rounded) > a,
	.wp-block-image:not(.is-style-rounded) img {
		border-radius: inherit;
	}

	.wp-block-image.aligncenter {
		text-align: center;
	}

	.wp-block-image.alignfull img,
	.wp-block-image.alignwide img {
		width: 100%;
		height: auto;
	}

	.wp-block-image.aligncenter,
	.wp-block-image .aligncenter,
	.wp-block-image.alignleft,
	.wp-block-image .alignleft,
	.wp-block-image.alignright,
	.wp-block-image .alignright {
		display: table;
	}

	.wp-block-image.aligncenter > figcaption,
	.wp-block-image .aligncenter > figcaption,
	.wp-block-image.alignleft > figcaption,
	.wp-block-image .alignleft > figcaption,
	.wp-block-image.alignright > figcaption,
	.wp-block-image .alignright > figcaption {
		display: table-caption;
		caption-side: bottom;
	}

	.wp-block-image .alignleft {
		float: left;
		margin: 0.5em 1em 0.5em 0;
	}

	.wp-block-image .alignright {
		float: right;
		margin: 0.5em 0 0.5em 1em;
	}

	.wp-block-image .aligncenter {
		margin-right: auto;
		margin-left: auto;
	}

	.wp-block-image figcaption {
		margin-top: 0.5em;
		margin-bottom: 1em;
	}

	.wp-block-image.is-style-circle-mask img,
	.wp-block-image.is-style-rounded img,
	.wp-block-image .is-style-rounded img {
		border-radius: 9999px;
	}

	@supports ((-webkit-mask-image: none) or (mask-image: none)) or (-webkit-mask-image: none) {
		.wp-block-image.is-style-circle-mask img {
			border-radius: 0;
			mask-image: url('data:image/svg+xml;utf8,<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle cx="50" cy="50" r="50"/></svg>');
			mask-mode: alpha;
			mask-repeat: no-repeat;
			mask-position: center;
			mask-size: contain;
		}
	}

	.wp-block-image figure {
		margin: 0;
	}

	.wp-block-image figcaption {
		font-size: 13px;
		color: #555;
		text-align: center;
	}

	.has-drop-cap:not(:focus)::first-letter {
		float: left;
		margin: 0.05em 0.1em 0 0;
		font-size: 8.4em;
		font-style: normal;
		font-weight: 100;
		line-height: 0.68;
		text-transform: uppercase;
	}

	p.has-drop-cap.has-background {
		overflow: hidden;
	}

	p.has-background {
		padding: 1.25em 2.375em;
	}

	:where(p.has-text-color:not(.has-link-color)) a {
		color: inherit;
	}

	.wp-block-columns {
		box-sizing: border-box;
		display: flex;
		flex-wrap: wrap !important;
		align-items: normal !important;
		margin-bottom: 1.75em;
	}

	@media (min-width: 782px) {
		.wp-block-columns {
			flex-wrap: nowrap !important;
		}
	}

	.wp-block-columns.are-vertically-aligned-top {
		align-items: flex-start;
	}

	.wp-block-columns.are-vertically-aligned-center {
		align-items: center;
	}

	.wp-block-columns.are-vertically-aligned-bottom {
		align-items: flex-end;
	}

	@media (max-width: 781px) {
		.wp-block-columns:not(.is-not-stacked-on-mobile) > .wp-block-column {
			flex-basis: 100% !important;
		}
	}

	@media (min-width: 782px) {
		.wp-block-columns:not(.is-not-stacked-on-mobile) > .wp-block-column {
			flex-basis: 0;
			flex-grow: 1;
		}

		.wp-block-columns:not(.is-not-stacked-on-mobile) > .wp-block-column[style*='flex-basis'] {
			flex-grow: 0;
		}
	}

	.wp-block-columns.is-not-stacked-on-mobile {
		flex-wrap: nowrap !important;
	}

	.wp-block-columns.is-not-stacked-on-mobile > .wp-block-column {
		flex-basis: 0;
		flex-grow: 1;
	}

	.wp-block-columns.is-not-stacked-on-mobile > .wp-block-column[style*='flex-basis'] {
		flex-grow: 0;
	}

	:where(.wp-block-columns.has-background) {
		padding: 1.25em 2.375em;
	}

	.wp-block-column {
		flex-grow: 1;
		min-width: 0;
		word-break: break-word;
		overflow-wrap: break-word;
	}

	.wp-block-column.is-vertically-aligned-top {
		align-self: flex-start;
	}

	.wp-block-column.is-vertically-aligned-center {
		align-self: center;
	}

	.wp-block-column.is-vertically-aligned-bottom {
		align-self: flex-end;
	}

	.wp-block-column.is-vertically-aligned-bottom,
	.wp-block-column.is-vertically-aligned-center,
	.wp-block-column.is-vertically-aligned-top {
		width: 100%;
	}

	.has-regular-font-size {
		font-size: 1em;
	}

	.has-larger-font-size {
		font-size: 2.625em;
	}

	.has-normal-font-size {
		font-size: var(--wp--preset--font-size--normal);
	}

	.has-huge-font-size {
		font-size: var(--wp--preset--font-size--huge);
	}

	.has-text-align-center {
		text-align: center;
	}

	.has-text-align-left {
		text-align: left;
	}

	.has-text-align-right {
		text-align: right;
	}

	#end-resizable-editor-section {
		display: none;
	}

	.aligncenter {
		clear: both;
	}

	.items-justified-left {
		justify-content: flex-start;
	}

	.items-justified-center {
		justify-content: center;
	}

	.items-justified-right {
		justify-content: flex-end;
	}

	.items-justified-space-between {
		justify-content: space-between;
	}

	.screen-reader-text {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(1px, 1px, 1px, 1px);
		clip-path: inset(50%);
		word-wrap: normal !important;
		border: 0;
	}

	.screen-reader-text:focus {
		top: 5px;
		left: 5px;
		z-index: 100000;
		display: block;
		width: auto;
		height: auto;
		padding: 15px 23px 14px;
		clip: auto !important;
		clip-path: none;
		font-size: 1em;
		line-height: normal;
		color: #444;
		text-decoration: none;
		background-color: #ddd;
	}

	html :where(.has-border-color),
	html :where([style*='border-width']) {
		border-style: solid;
	}

	html :where(img[class*='wp-image-']) {
		max-width: 100%;
		height: auto;
	}

	a {
		color: var(--wp--preset--color--foreground);
	}

	.wp-block-post-title {
		font-family: var(--wp--preset--font-family--source-serif-pro);
		font-size: var(--wp--custom--typography--font-size--gigantic);
		font-weight: 300;
		line-height: var(--wp--custom--typography--line-height--tiny);
	}

	.wp-block-pullquote {
		border-width: 1px 0;
	}

	.wp-block-query-title {
		font-family: var(--wp--preset--font-family--source-serif-pro);
		font-size: var(--wp--custom--typography--font-size--gigantic);
		font-weight: 300;
		line-height: var(--wp--custom--typography--line-height--small);
	}

	.wp-block-quote {
		border-width: 1px;
	}

	.p-list {
		position: fixed;
		top: 40vh;
		left: 20px;
		width: 240px;
		height: 100vh;
	}

	@container (max-width:240px) {
		.p-list {
			display: none;
		}
	}
</style>

<script>
	// ページの読み込みが完了したら実行
	window.addEventListener('load', function () {
		const elements = document.querySelectorAll('.wp-block-heading');
		const ul = document.querySelector('.js-lists');
		let h2Cnt = 1;
		for (let i = 0; i < elements.length; i++) {
			const element = elements[i];
			if (element.tagName == 'H2') {
				const li = document.createElement('li');
				const aTag = document.createElement('a');
				const nestUl = document.createElement('ul');
				nestUl.classList = `ul${h2Cnt}`;
				aTag.textContent = element.textContent;
				aTag.href = '#' + element.id;
				ul.appendChild(li);
				li.appendChild(aTag);
				li.appendChild(nestUl);
				h2Cnt++;
			} else {
				const li = document.createElement('li');
				const aTag = document.createElement('a');
				aTag.textContent = element.textContent;
				aTag.href = '#' + element.id;
				const nestUl = document.querySelector(`.ul${h2Cnt - 1}`);
				nestUl.appendChild(li);
				li.appendChild(aTag);
			}
		}
	});

	// ページ内リンクのスムーススクロール
</script>
