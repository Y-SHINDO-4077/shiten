---
import { Image } from 'astro:assets';
import '../assets/scss/global.scss';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import PageTop from '../assets/images/PAGETOP.svg';
import Swup from 'swup';

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="ja">
	<head>
		<BaseHead title={title} description={description} />
		<script>
			/* eslint-disable */
			/* global Typekit */
			(function (d) {
				var config = {
						kitId: 'tph1piu',
						scriptTimeout: 3000,
						async: true,
					},
					h = d.documentElement,
					t = setTimeout(function () {
						h.className = h.className.replace(/\bwf-loading\b/g, '') + ' wf-inactive';
					}, config.scriptTimeout),
					tk = d.createElement('script'),
					f = false,
					s = d.getElementsByTagName('script')[0],
					a;
				h.className += ' wf-loading';
				tk.src = 'https://use.typekit.net/' + config.kitId + '.js';
				tk.async = true;
				tk.onload = tk.onreadystatechange = function () {
					a = this.readyState;
					if (f || (a && a != 'complete' && a != 'loaded')) return;
					f = true;
					clearTimeout(t);
					try {
						Typekit.load(config);
					} catch (e) {}
				};
				s.parentNode.insertBefore(tk, s);
			})(document);
			/* eslint-disable */
		</script>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
		<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js" defer></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollTrigger.min.js" defer></script>
	</head>
	<body class="transition-main" id="swup">
		<script>
			window.fbAsyncInit = function () {
				FB.init({
					appId: '1330794567604263',
					xfbml: true,
					version: 'v19.0',
				});
				FB.AppEvents.logPageView();
			};

			(function (d, s, id) {
				var js,
					fjs = d.getElementsByTagName(s)[0];
				if (d.getElementById(id)) {
					return;
				}
				js = d.createElement(s);
				js.id = id;
				js.src = 'https://connect.facebook.net/en_US/sdk.js';
				fjs.parentNode.insertBefore(js, fjs);
			})(document, 'script', 'facebook-jssdk');
		</script>
		<div id="pagetop"></div>
		<Header title="SHITEN" />
		<main class="l-main">
			<slot />
		</main>
		<div class="c-pagetop">
			<a href="#pagetop" class="c-pagetop__link">
				<Image src={PageTop} alt="ページトップへ" />
			</a>
		</div>
		<Footer />
		<div class="p-overlay p-transition-overlay"></div>
		<script>
			import Swup from 'swup';
			//アンカースクロールアニメーション
			const gap = 100;
			const anchorElements = document.querySelectorAll('a[href^="#"]');
			if (anchorElements) {
				anchorElements.forEach(anchorElement => {
					anchorElement.addEventListener('click', e => {
						e.preventDefault();
						const targetId = anchorElement.getAttribute('href').replace('#', '');
						const target = document.getElementById(targetId).getBoundingClientRect().top + window.pageYOffset;
						window.scrollTo({
							top: target - gap,
							behavior: 'smooth',
						});
					});
				});
			}

			//ページトップボタン
			const pagetop = document.querySelector('.c-pagetop');
			const header = document.querySelector('.p-header');
			if (pagetop) {
				window.addEventListener('scroll', () => {
					if (window.scrollY > 100) {
						pagetop.classList.add('is-active');
						header.classList.add('is-active');
					} else {
						pagetop.classList.remove('is-active');
						header.classList.remove('is-active');
					}
				});
			}

			//swup
			const swup = new Swup({
				containers: ['#swup'],
			});
		</script>
		<style>
			html.is-changing .transition-main {
				transition: transform 400ms ease-in-out;
			}

			html.is-animating.is-leaving .transition-main {
				transform: translateY(calc(1 * 5vh * var(--overlay-direction, 1)));
			}

			html.is-animating.is-rendering .transition-main {
				transform: translateY(calc(-1 * 5vh * var(--overlay-direction, 1)));
			}

			.p-transition-overlay {
				position: fixed;
				top: 0;
				right: 0;
				bottom: 0;
				left: 0;
				z-index: 2;
				pointer-events: none;
				background-color: #e7ef61;
				opacity: 0;
				transform: translate3d(0, calc(-1 * 100% * var(--overlay-direction, 1)), 0);
			}

			html.is-changing .p-transition-overlay {
				opacity: 1;
				transition: transform 400ms ease-in-out;
			}

			html.is-animating .p-transition-overlay {
				transform: translate3d(0, 0, 0);
			}

			html.is-rendering .p-transition-overlay {
				transform: translate3d(0, calc(var(--overlay-direction, 1) * 100%), 0);
			}
		</style>
	</body>
</html>
